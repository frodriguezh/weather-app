{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frodriguez\\\\Documents\\\\react\\\\weather-app\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport WelcomePage from './pages/WelcomePage';\nimport MainPage from './pages/MainPage';\nimport CityPage from './pages/CityPage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const initialValue = {\n    allWeather: {},\n    allChartData: {},\n    allForecastItemList: {}\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"SET_ALL_WEATHER\":\n        const weatherCity = action.payload;\n        const newAllWeather = { ...state.allWeather,\n          ...weatherCity\n        };\n        return { ...state,\n          allWeather: newAllWeather\n        };\n\n      case \"SET_CHART_DATA\":\n        const chartDataCity = action.payload;\n        const newAllChartData = { ...state.allChartData,\n          ...chartDataCity\n        };\n        return { ...state,\n          allChartData: newAllChartData\n        };\n\n      case \"SET_FORECAST_ITEM_LIST\":\n        const forecastItemListCity = action.payload;\n        const newAllForecastItemListCity = { ...state.allForecastItemList,\n          ...forecastItemListCity\n        };\n        return { ...state,\n          forecastItemListCity: newAllForecastItemListCity\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialValue);\n  /*const [allWeather, setAllWeather] = useState({})\r\n  const [allChartData, setAllChartData] = useState({})\r\n  const [allForecastItemList, setAllForecastItemList] = useState({})\r\n      const onSetAllWeather = useCallback( weatherCity => { \r\n      setAllWeather(allWeather => {\r\n          return ({ ...allWeather, ...weatherCity })\r\n      \r\n      })\r\n  }, [setAllWeather])\r\n    const onSetChartData = useCallback((chartDataCity) => {\r\n      setAllChartData(allChartData => ({ ...allChartData, ...chartDataCity}))\r\n  }, [setAllChartData])\r\n    const onSetForecastItemList = useCallback((forecastItemListCity) => {\r\n      setAllForecastItemList(allForecastItemList => ({ ...allForecastItemList, ...forecastItemListCity}))\r\n  }, [setAllForecastItemList])\r\n    const actions = useMemo(() => (\r\n      {\r\n          onSetAllWeather,\r\n          onSetChartData, \r\n          onSetForecastItemList\r\n      }\r\n  ), [onSetAllWeather, onSetChartData, onSetForecastItemList])\r\n    const data = useMemo(() => (\r\n      {\r\n          allWeather,\r\n          allChartData,\r\n          allForecastItemList\r\n      }\r\n  ), [allWeather, allChartData, allForecastItemList])*/\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(WelcomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        children: /*#__PURE__*/_jsxDEV(MainPage, {\n          data: state,\n          actions: dispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/city/:countryCode/:city\",\n        children: /*#__PURE__*/_jsxDEV(CityPage, {\n          data: state,\n          actions: dispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        children: /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"4lkJSiYZPtg3yU6cDCuaqNx534E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather-app/src/App.jsx"],"names":["React","useReducer","BrowserRouter","Router","Switch","Route","WelcomePage","MainPage","CityPage","NotFoundPage","App","initialValue","allWeather","allChartData","allForecastItemList","reducer","state","action","type","weatherCity","payload","newAllWeather","chartDataCity","newAllChartData","forecastItemListCity","newAllForecastItemListCity","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,aAAa,IAAIC,MAA1B,EACSC,MADT,EAESC,KAFT,QAEsB,kBAFtB;AAGA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAGd,QAAMC,YAAY,GAAG;AACjBC,IAAAA,UAAU,EAAE,EADK;AAEjBC,IAAAA,YAAY,EAAE,EAFG;AAGjBC,IAAAA,mBAAmB,EAAE;AAHJ,GAArB;;AAMA,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE/B,YAAQA,MAAM,CAACC,IAAf;AAEI,WAAK,iBAAL;AACI,cAAMC,WAAW,GAAGF,MAAM,CAACG,OAA3B;AACA,cAAMC,aAAa,GAAG,EAAE,GAAGL,KAAK,CAACJ,UAAX;AAAuB,aAAGO;AAA1B,SAAtB;AACA,eAAO,EAAE,GAAGH,KAAL;AAAYJ,UAAAA,UAAU,EAAES;AAAxB,SAAP;;AAEJ,WAAK,gBAAL;AACI,cAAMC,aAAa,GAAGL,MAAM,CAACG,OAA7B;AACA,cAAMG,eAAe,GAAG,EAAE,GAAGP,KAAK,CAACH,YAAX;AAAyB,aAAGS;AAA5B,SAAxB;AACA,eAAO,EAAE,GAAGN,KAAL;AAAYH,UAAAA,YAAY,EAAEU;AAA1B,SAAP;;AAEJ,WAAK,wBAAL;AACI,cAAMC,oBAAoB,GAAGP,MAAM,CAACG,OAApC;AACA,cAAMK,0BAA0B,GAAE,EAAE,GAAGT,KAAK,CAACF,mBAAX;AAAgC,aAAGU;AAAnC,SAAlC;AACA,eAAO,EAAE,GAAGR,KAAL;AAAYQ,UAAAA,oBAAoB,EAAEC;AAAlC,SAAP;;AAEJ;AACI,eAAOT,KAAP;AAlBR;AAqBH,GAvBD;;AA0BA,QAAM,CAACA,KAAD,EAAQU,QAAR,IAAoBzB,UAAU,CAACc,OAAD,EAAUJ,YAAV,CAApC;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQI,sBAEI,QAAC,MAAD;AAAA,2BACI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA,+BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEK,KAAhB;AAAuB,UAAA,OAAO,EAAEU;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,0BAAZ;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEV,KAAhB;AAAuB,UAAA,OAAO,EAAEU;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI,QAAC,KAAD;AAAA,+BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAoBH,CA7FD;;GAAMhB,G;;KAAAA,G;AA+FN,eAAeA,GAAf","sourcesContent":["import React, {useReducer} from 'react'\r\nimport { BrowserRouter as Router,\r\n         Switch,\r\n         Route } from 'react-router-dom'\r\nimport WelcomePage from './pages/WelcomePage'\r\nimport MainPage from './pages/MainPage'\r\nimport CityPage from './pages/CityPage'\r\nimport NotFoundPage from './pages/NotFoundPage'\r\n\r\nconst App = () => {\r\n\r\n    \r\n    const initialValue = {\r\n        allWeather: {},\r\n        allChartData: {},\r\n        allForecastItemList: {}\r\n    }\r\n\r\n    const reducer = (state, action) => {\r\n\r\n        switch (action.type) {\r\n\r\n            case \"SET_ALL_WEATHER\":\r\n                const weatherCity = action.payload\r\n                const newAllWeather = { ...state.allWeather, ...weatherCity }\r\n                return { ...state, allWeather: newAllWeather}\r\n                \r\n            case \"SET_CHART_DATA\":\r\n                const chartDataCity = action.payload\r\n                const newAllChartData = { ...state.allChartData, ...chartDataCity}\r\n                return { ...state, allChartData: newAllChartData}\r\n\r\n            case \"SET_FORECAST_ITEM_LIST\":\r\n                const forecastItemListCity = action.payload\r\n                const newAllForecastItemListCity= { ...state.allForecastItemList, ...forecastItemListCity}\r\n                return { ...state, forecastItemListCity: newAllForecastItemListCity}\r\n            \r\n            default:\r\n                return state\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialValue)\r\n\r\n    /*const [allWeather, setAllWeather] = useState({})\r\n    const [allChartData, setAllChartData] = useState({})\r\n    const [allForecastItemList, setAllForecastItemList] = useState({})\r\n\r\n\r\n    const onSetAllWeather = useCallback( weatherCity => { \r\n        setAllWeather(allWeather => {\r\n            return ({ ...allWeather, ...weatherCity })\r\n        \r\n        })\r\n    }, [setAllWeather])\r\n\r\n    const onSetChartData = useCallback((chartDataCity) => {\r\n        setAllChartData(allChartData => ({ ...allChartData, ...chartDataCity}))\r\n    }, [setAllChartData])\r\n\r\n    const onSetForecastItemList = useCallback((forecastItemListCity) => {\r\n        setAllForecastItemList(allForecastItemList => ({ ...allForecastItemList, ...forecastItemListCity}))\r\n    }, [setAllForecastItemList])\r\n\r\n    const actions = useMemo(() => (\r\n        {\r\n            onSetAllWeather,\r\n            onSetChartData, \r\n            onSetForecastItemList\r\n        }\r\n    ), [onSetAllWeather, onSetChartData, onSetForecastItemList])\r\n\r\n    const data = useMemo(() => (\r\n        {\r\n            allWeather,\r\n            allChartData,\r\n            allForecastItemList\r\n        }\r\n    ), [allWeather, allChartData, allForecastItemList])*/\r\n\r\n    return (\r\n        \r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <WelcomePage />\r\n                </Route>\r\n                <Route path=\"/main\">\r\n                    <MainPage data={state} actions={dispatch} />\r\n                </Route>\r\n                <Route path=\"/city/:countryCode/:city\">\r\n                    <CityPage data={state} actions={dispatch} />\r\n                </Route>\r\n                <Route>\r\n                    <NotFoundPage />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n          \r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}