{"ast":null,"code":"import moment from 'moment';\nimport { toCelsius } from '../utils';\n\nconst getForecastItemList = data => {\n  const interval = [4, 8, 12, 16, 20, 24];\n  const forecastItemListAux = data.list.filter((item, index) => interval.includes(index)).map(item => {\n    return {\n      hour: moment.unix(item.dt).hour(),\n      weekDay: moment.unix(item.dt).format('dddd'),\n      state: item.weather[0].main.toLowerCase(),\n      temperature: toCelsius(item.main.temp)\n    };\n  });\n  return {\n    forecastItemListAux\n  };\n};\n\nexport default getForecastItemList;","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather-app/src/utils/transform/getForecastItemList.jsx"],"names":["moment","toCelsius","getForecastItemList","data","interval","forecastItemListAux","list","filter","item","index","includes","map","hour","unix","dt","weekDay","format","state","weather","main","toLowerCase","temperature","temp"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,MAAMC,mBAAmB,GAAIC,IAAD,IAAU;AAElC,QAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,CAAjB;AAEA,QAAMC,mBAAmB,GAAGF,IAAI,CAACG,IAAL,CAC3BC,MAD2B,CACpB,CAACC,IAAD,EAAOC,KAAP,KAAiBL,QAAQ,CAACM,QAAT,CAAkBD,KAAlB,CADG,EAE3BE,GAF2B,CAEvBH,IAAI,IAAI;AACT,WAAQ;AACJI,MAAAA,IAAI,EAAEZ,MAAM,CAACa,IAAP,CAAYL,IAAI,CAACM,EAAjB,EAAqBF,IAArB,EADF;AAEJG,MAAAA,OAAO,EAAEf,MAAM,CAACa,IAAP,CAAYL,IAAI,CAACM,EAAjB,EAAqBE,MAArB,CAA4B,MAA5B,CAFL;AAGJC,MAAAA,KAAK,EAAET,IAAI,CAACU,OAAL,CAAa,CAAb,EAAgBC,IAAhB,CAAqBC,WAArB,EAHH;AAIJC,MAAAA,WAAW,EAAEpB,SAAS,CAACO,IAAI,CAACW,IAAL,CAAUG,IAAX;AAJlB,KAAR;AAMH,GAT2B,CAA5B;AAWA,SAAO;AAAEjB,IAAAA;AAAF,GAAP;AACH,CAhBD;;AAkBA,eAAeH,mBAAf","sourcesContent":["import moment from 'moment'\r\nimport { toCelsius } from '../utils'\r\n\r\nconst getForecastItemList = (data) => {\r\n\r\n    const interval = [4, 8, 12, 16, 20, 24]\r\n\r\n    const forecastItemListAux = data.list\r\n    .filter((item, index) => interval.includes(index))\r\n    .map(item => {\r\n        return ({\r\n            hour: moment.unix(item.dt).hour(),\r\n            weekDay: moment.unix(item.dt).format('dddd'),\r\n            state: item.weather[0].main.toLowerCase(),\r\n            temperature: toCelsius(item.main.temp)\r\n        })\r\n    })\r\n\r\n    return { forecastItemListAux }\r\n}\r\n\r\nexport default getForecastItemList"]},"metadata":{},"sourceType":"module"}