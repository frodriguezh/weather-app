{"ast":null,"code":"import { getCityCode } from './../utils/utils';\nimport { toCelsius } from './../utils/utils';\n\nconst getAllWeather = responde => {\n  const {\n    data\n  } = response;\n  const temperature = Number(toCelsius(data.main.temp));\n  const state = data.weather[0].main.toLowerCase();\n  const propName = getCityCode(city, countryCode);\n  const propValue = {\n    temperature,\n    state\n  };\n  setAllWeather(allWeather => {\n    const result = { ...allWeather,\n      [propName]: propValue\n    };\n    return result;\n  });\n  return {\n    [propName]: propValue\n  };\n};\n\nexport default getAllWeather;","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather-app/src/utils/transform/getAllWeather.jsx"],"names":["getCityCode","toCelsius","getAllWeather","responde","data","response","temperature","Number","main","temp","state","weather","toLowerCase","propName","city","countryCode","propValue","setAllWeather","allWeather","result"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA2B,kBAA3B;;AAEA,MAAMC,aAAa,GAAIC,QAAD,IAAc;AAEhC,QAAM;AAAEC,IAAAA;AAAF,MAAWC,QAAjB;AACA,QAAMC,WAAW,GAAGC,MAAM,CAACN,SAAS,CAACG,IAAI,CAACI,IAAL,CAAUC,IAAX,CAAV,CAA1B;AACA,QAAMC,KAAK,GAAGN,IAAI,CAACO,OAAL,CAAa,CAAb,EAAgBH,IAAhB,CAAqBI,WAArB,EAAd;AACA,QAAMC,QAAQ,GAAGb,WAAW,CAACc,IAAD,EAAOC,WAAP,CAA5B;AACA,QAAMC,SAAS,GAAG;AAAEV,IAAAA,WAAF;AAAgBI,IAAAA;AAAhB,GAAlB;AAEAO,EAAAA,aAAa,CAACC,UAAU,IAAI;AACxB,UAAMC,MAAM,GAAG,EAAE,GAAGD,UAAL;AAAiB,OAACL,QAAD,GAAaG;AAA9B,KAAf;AACA,WAAOG,MAAP;AAEH,GAJY,CAAb;AAMA,SAAO;AAAC,KAACN,QAAD,GAAaG;AAAd,GAAP;AACH,CAfD;;AAiBA,eAAed,aAAf","sourcesContent":["import { getCityCode } from './../utils/utils'\r\nimport { toCelsius } from  './../utils/utils'\r\n\r\nconst getAllWeather = (responde) => {\r\n\r\n    const { data } = response\r\n    const temperature = Number(toCelsius(data.main.temp))\r\n    const state = data.weather[0].main.toLowerCase()\r\n    const propName = getCityCode(city, countryCode)\r\n    const propValue = { temperature , state }\r\n\r\n    setAllWeather(allWeather => {\r\n        const result = { ...allWeather, [propName] : propValue }\r\n        return result\r\n\r\n    })\r\n\r\n    return {[propName] : propValue}\r\n}\r\n\r\nexport default getAllWeather"]},"metadata":{},"sourceType":"module"}