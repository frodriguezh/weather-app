{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frodriguez\\\\Documents\\\\react\\\\weather-app\\\\src\\\\components\\\\ForecastChart\\\\ForecastChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForecastChart = ({\n  data\n}) => {\n  _s();\n\n  const marginSize = useMemo(() => ({\n    top: 20,\n    bottom: 20,\n    left: 5,\n    right: 5\n  }), []);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    height: 250,\n    width: \"95%\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      margin: marginSize,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"dayHour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"max\",\n        stroke: \"#FF0000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"min\",\n        stroke: \"#0000FF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForecastChart, \"0c512f1idw9NPtshN/cXl3yafcQ=\");\n\n_c = ForecastChart;\nForecastChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    dayHour: PropTypes.string.isRequired,\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired\n  })).isRequired\n};\nexport default ForecastChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastChart\");","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather-app/src/components/ForecastChart/ForecastChart.jsx"],"names":["React","useMemo","PropTypes","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","ForecastChart","data","marginSize","top","bottom","left","right","propTypes","arrayOf","shape","dayHour","string","isRequired","min","number","max"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EACSC,IADT,EAESC,aAFT,EAGSC,KAHT,EAISC,KAJT,EAKSC,OALT,EAMSC,MANT,EAOSC,mBAPT,QAOoC,UAPpC;;;AASA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAChC,QAAMC,UAAU,GAAGZ,OAAO,CAAC,OAAO;AAAEa,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,MAAM,EAAE,EAAnB;AAAuBC,IAAAA,IAAI,EAAE,CAA7B;AAAgCC,IAAAA,KAAK,EAAE;AAAvC,GAAP,CAAD,EAAoD,EAApD,CAA1B;AACA,sBACI,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAE,GAA7B;AAAkC,IAAA,KAAK,EAAE,KAAzC;AAAA,2BACI,QAAC,SAAD;AACI,MAAA,MAAM,EAAEJ,UADZ;AAEI,MAAA,IAAI,EAAED,IAFV;AAAA,8BAGI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,KAA9B;AAAoC,QAAA,MAAM,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cARJ,eASI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,KAA9B;AAAoC,QAAA,MAAM,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAjBD;;GAAMD,a;;KAAAA,a;AAmBNA,aAAa,CAACO,SAAd,GAA0B;AAEtBN,EAAAA,IAAI,EAAEV,SAAS,CAACiB,OAAV,CACFjB,SAAS,CAACkB,KAAV,CAAgB;AAEZC,IAAAA,OAAO,EAAEnB,SAAS,CAACoB,MAAV,CAAiBC,UAFd;AAGZC,IAAAA,GAAG,EAAEtB,SAAS,CAACuB,MAAV,CAAiBF,UAHV;AAIZG,IAAAA,GAAG,EAAExB,SAAS,CAACuB,MAAV,CAAiBF;AAJV,GAAhB,CADE,EAOJA;AAToB,CAA1B;AAaA,eAAeZ,aAAf","sourcesContent":["import React, {useMemo} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { LineChart,\r\n         Line,\r\n         CartesianGrid, \r\n         XAxis, \r\n         YAxis, \r\n         Tooltip,\r\n         Legend,\r\n         ResponsiveContainer } from 'recharts'\r\n\r\nconst ForecastChart = ({ data }) => {\r\n    const marginSize = useMemo(() => ({ top: 20, bottom: 20, left: 5, right: 5 }),[])\r\n    return (\r\n        <ResponsiveContainer height={250} width={\"95%\"}>\r\n            <LineChart\r\n                margin={marginSize}\r\n                data={data}>\r\n                <XAxis dataKey=\"dayHour\" ></XAxis>\r\n                <YAxis></YAxis>\r\n                <CartesianGrid></CartesianGrid>\r\n                <Tooltip></Tooltip>\r\n                <Legend></Legend>\r\n                <Line type=\"monotone\" dataKey=\"max\" stroke=\"#FF0000\" ></Line>\r\n                <Line type=\"monotone\" dataKey=\"min\" stroke=\"#0000FF\" ></Line>\r\n            </LineChart>  \r\n        </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nForecastChart.propTypes = {\r\n\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n\r\n            dayHour: PropTypes.string.isRequired,\r\n            min: PropTypes.number.isRequired,\r\n            max: PropTypes.number.isRequired,\r\n        }),\r\n    ).isRequired,\r\n\r\n}\r\n\r\nexport default ForecastChart\r\n"]},"metadata":{},"sourceType":"module"}