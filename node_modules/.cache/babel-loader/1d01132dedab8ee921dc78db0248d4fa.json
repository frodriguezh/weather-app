{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frodriguez\\\\Desktop\\\\weather-app\\\\src\\\\components\\\\ForecastChart\\\\ForecastChart.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForecastChart = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ForecastChart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ForecastChart;\nForecastChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    dayHour: PropTypes.string.isRequired,\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired\n  })).isRequired\n};\nForecastChart.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ForecastChart\",\n  \"props\": {\n    \"data\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"dayHour\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"min\": {\n              \"name\": \"number\",\n              \"required\": true\n            },\n            \"max\": {\n              \"name\": \"number\",\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default ForecastChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastChart\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\ForecastChart\\\\ForecastChart.jsx\"] = {\n    name: \"ForecastChart\",\n    docgenInfo: ForecastChart.__docgenInfo,\n    path: \"src\\\\components\\\\ForecastChart\\\\ForecastChart.jsx\"\n  };\n}","map":{"version":3,"sources":["C:/Users/frodriguez/Desktop/weather-app/src/components/ForecastChart/ForecastChart.jsx"],"names":["React","PropTypes","ForecastChart","data","propTypes","arrayOf","shape","dayHour","string","isRequired","min","number","max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;KAAMD,a;AAQNA,aAAa,CAACE,SAAd,GAA0B;AAEtBD,EAAAA,IAAI,EAAEF,SAAS,CAACI,OAAV,CACFJ,SAAS,CAACK,KAAV,CAAgB;AAEZC,IAAAA,OAAO,EAAEN,SAAS,CAACO,MAAV,CAAiBC,UAFd;AAGZC,IAAAA,GAAG,EAAET,SAAS,CAACU,MAAV,CAAiBF,UAHV;AAIZG,IAAAA,GAAG,EAAEX,SAAS,CAACU,MAAV,CAAiBF;AAJV,GAAhB,CADE,EAOJA;AAToB,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,eAAeP,aAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ForecastChart = ({ data }) => {\r\n    return (\r\n        <div>\r\n            ForecastChart\r\n        </div>\r\n    )\r\n}\r\n\r\nForecastChart.propTypes = {\r\n\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n\r\n            dayHour: PropTypes.string.isRequired,\r\n            min: PropTypes.number.isRequired,\r\n            max: PropTypes.number.isRequired,\r\n        }),\r\n    ).isRequired,\r\n\r\n}\r\n\r\nexport default ForecastChart\r\n"]},"metadata":{},"sourceType":"module"}