{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frodriguez\\\\Documents\\\\react\\\\weather-app\\\\src\\\\pages\\\\CityPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport { useParams } from 'react-router-dom';\nimport AppFrame from '../components/AppFrame/AppFrame';\nimport CityInfo from './../components/CityInfo';\nimport Weather from './../components/Weather';\nimport WheaterDetails from './../components/WheaterDetails';\nimport Forecast from './../components/Forecast';\nimport ForecastChart from './../components/ForecastChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [city, countryCode] = useParams();\nexport const CityPage = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [forecastItemList, setForecastItemList] = useState(null);\n  useEffect(() => {\n    setData(dataExample);\n    setForecastItemList(forecastItemListExample);\n  }, []);\n  const dataExample = [{\n    \"dayHour\": \"Jue 18\",\n    \"min\": 14,\n    \"max\": 22\n  }, {\n    \"dayHour\": \"Vie 06\",\n    \"min\": 18,\n    \"max\": 27\n  }, {\n    \"dayHour\": \"Vie 12\",\n    \"min\": 18,\n    \"max\": 28\n  }, {\n    \"dayHour\": \"Vie 18\",\n    \"min\": 18,\n    \"max\": 25\n  }, {\n    \"dayHour\": \"Sab 06\",\n    \"min\": 15,\n    \"max\": 22\n  }, {\n    \"dayHour\": \"Sab 12\",\n    \"min\": 12,\n    \"max\": 19\n  }];\n  const forecastItemListExample = [{\n    weekDay: \"Jueves\",\n    hour: 18,\n    state: \"clear\",\n    temperature: 17\n  }, {\n    weekDay: \"Viernes\",\n    hour: 6,\n    state: \"clouds\",\n    temperature: 18\n  }, {\n    weekDay: \"Viernes\",\n    hour: 12,\n    state: \"clear\",\n    temperature: 18\n  }, {\n    weekDay: \"Viernes\",\n    hour: 18,\n    state: \"clouds\",\n    temperature: 19\n  }, {\n    weekDay: \"Sábado\",\n    hour: 14,\n    state: \"rain\",\n    temperature: 17\n  }, {\n    weekDay: \"Sábado\",\n    hour: 12,\n    state: \"rain\",\n    temperature: 17\n  }];\n  return /*#__PURE__*/_jsxDEV(AppFrame, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-around\",\n      direction: \"column\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        justifyContent: \"center\",\n        alignItems: \"flex-end\",\n        children: /*#__PURE__*/_jsxDEV(CityInfo, {\n          city: \"Santiago\",\n          country: \"Chile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Weather, {\n          temperature: 10,\n          state: \"clouds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(WheaterDetails, {\n          humidity: 80,\n          wind: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: data && /*#__PURE__*/_jsxDEV(ForecastChart, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: forecastItemList && /*#__PURE__*/_jsxDEV(Forecast, {\n          forecastItemList: forecastItemList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CityPage, \"rAKPjIhvsj0DHC+wLZDVcVQlft8=\");\n\n_c = CityPage;\nexport default CityPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityPage\");","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather-app/src/pages/CityPage.jsx"],"names":["React","useState","useEffect","axios","Grid","useParams","AppFrame","CityInfo","Weather","WheaterDetails","Forecast","ForecastChart","city","countryCode","CityPage","data","setData","forecastItemList","setForecastItemList","dataExample","forecastItemListExample","weekDay","hour","state","temperature"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { useParams } from 'react-router-dom'\r\nimport AppFrame from '../components/AppFrame/AppFrame'\r\nimport CityInfo from './../components/CityInfo'\r\nimport Weather from './../components/Weather'\r\nimport WheaterDetails from './../components/WheaterDetails'\r\nimport Forecast from './../components/Forecast'\r\nimport ForecastChart from './../components/ForecastChart'\r\n\r\n\r\nconst [city, countryCode] = useParams()\r\n\r\nexport const CityPage = () => {\r\n\r\n    const [data, setData] = useState(null)\r\n    const [forecastItemList, setForecastItemList] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setData(dataExample)    \r\n        setForecastItemList(forecastItemListExample)\r\n        \r\n    }, [])\r\n    \r\n\r\n    const dataExample = [\r\n        {\r\n            \"dayHour\": \"Jue 18\",\r\n            \"min\": 14,\r\n            \"max\": 22,\r\n        },\r\n        {\r\n            \"dayHour\": \"Vie 06\",\r\n            \"min\": 18,\r\n            \"max\": 27,\r\n        },\r\n        {\r\n            \"dayHour\": \"Vie 12\",\r\n            \"min\": 18,\r\n            \"max\": 28,\r\n        },\r\n        {\r\n            \"dayHour\": \"Vie 18\",\r\n            \"min\": 18,\r\n            \"max\": 25,\r\n        },\r\n        {\r\n            \"dayHour\": \"Sab 06\",\r\n            \"min\": 15,\r\n            \"max\": 22,\r\n        },\r\n        {\r\n            \"dayHour\": \"Sab 12\",\r\n            \"min\": 12,\r\n            \"max\": 19,\r\n        }\r\n    ]\r\n\r\n    const forecastItemListExample = [\r\n \r\n        { weekDay: \"Jueves\", hour: 18, state: \"clear\", temperature: 17 },\r\n        { weekDay: \"Viernes\", hour: 6, state: \"clouds\", temperature: 18 },\r\n        { weekDay: \"Viernes\", hour: 12, state: \"clear\", temperature: 18 },\r\n        { weekDay: \"Viernes\", hour: 18, state: \"clouds\", temperature: 19 },\r\n        { weekDay: \"Sábado\", hour: 14, state: \"rain\", temperature: 17 },\r\n        { weekDay: \"Sábado\", hour: 12, state: \"rain\", temperature: 17 },\r\n    ]\r\n\r\n    return (\r\n        <AppFrame>\r\n            <Grid container\r\n            justifyContent=\"space-around\"\r\n            direction=\"column\"\r\n            spacing={2}>\r\n\r\n                <Grid item container \r\n                    xs={12}\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"flex-end\">\r\n                    <CityInfo city={\"Santiago\"} country={\"Chile\"}/>\r\n                </Grid>\r\n\r\n                <Grid container item \r\n                    xs={12}\r\n                    justifyContent=\"center\">\r\n                    <Weather temperature={10} state=\"clouds\" />\r\n                    <WheaterDetails humidity={80} wind= {10}/>\r\n    \r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    { data && <ForecastChart data={data}/> }\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    { forecastItemList && <Forecast forecastItemList = {forecastItemList}/> }\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </AppFrame>\r\n        \r\n    )\r\n}\r\n\r\nexport default CityPage"]},"metadata":{},"sourceType":"module"}