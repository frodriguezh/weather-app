{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport 'moment/locale/es';\nimport { getForecastUrl } from './../utils/urls';\nimport getCharData from './../utils/transform/getChartData';\n\nconst useCityPage = () => {\n  _s();\n\n  const [chartData, setChartData] = useState(null);\n  const [forecastItemList, setForecastItemList] = useState(null);\n  const {\n    city,\n    countryCode\n  } = useParams();\n  useEffect(() => {\n    const getForecast = async () => {\n      const url = getForecastUrl(city, countryCode);\n\n      try {\n        const {\n          data\n        } = await axios.get(url);\n        const {\n          dataAux,\n          forecastItemListAux\n        } = getCharData(data);\n        setChartData(dataAux);\n        setForecastItemList(forecastItemListAux);\n      } catch (error) {\n        console.log(\"error\");\n      }\n    };\n\n    getForecast();\n  }, [city, countryCode]);\n  return {\n    chartData,\n    forecastItemList,\n    city\n  };\n};\n\n_s(useCityPage, \"Oq0LXJ0yq1/kUXy6RQ4H5Y/HF+A=\", false, function () {\n  return [useParams];\n});\n\nexport default useCityPage;","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather-app/src/hooks/useCityPage.jsx"],"names":["useState","useEffect","useParams","getForecastUrl","getCharData","useCityPage","chartData","setChartData","forecastItemList","setForecastItemList","city","countryCode","getForecast","url","data","axios","get","dataAux","forecastItemListAux","error","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,kBAAP;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,WAAP,MAAwB,mCAAxB;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,IAAD,CAAxD;AAEA,QAAM;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAwBT,SAAS,EAAvC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMW,WAAW,GAAG,YAAY;AAG5B,YAAMC,GAAG,GAAGV,cAAc,CAACO,IAAD,EAAOC,WAAP,CAA1B;;AAEA,UAAI;AAEA,cAAM;AAAEG,UAAAA;AAAF,YAAW,MAAMC,KAAK,CAACC,GAAN,CAAUH,GAAV,CAAvB;AAEA,cAAM;AAAEI,UAAAA,OAAF;AAAWC,UAAAA;AAAX,YAAmCd,WAAW,CAACU,IAAD,CAApD;AAEAP,QAAAA,YAAY,CAACU,OAAD,CAAZ;AAGAR,QAAAA,mBAAmB,CAACS,mBAAD,CAAnB;AAEH,OAXD,CAWE,OAAOC,KAAP,EAAc;AAEZC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AAEJ,KArBD;;AAuBAT,IAAAA,WAAW;AAEd,GA3BQ,EA2BN,CAACF,IAAD,EAAOC,WAAP,CA3BM,CAAT;AA6BA,SAAO;AAAEL,IAAAA,SAAF;AAAaE,IAAAA,gBAAb;AAA+BE,IAAAA;AAA/B,GAAP;AACH,CArCD;;GAAML,W;UAK4BH,S;;;AAkClC,eAAeG,WAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport 'moment/locale/es'\r\nimport { getForecastUrl } from './../utils/urls'\r\nimport getCharData from './../utils/transform/getChartData'\r\n\r\n\r\n\r\nconst useCityPage = () => {\r\n\r\n    const [chartData, setChartData] = useState(null)\r\n    const [forecastItemList, setForecastItemList] = useState(null)\r\n\r\n    const { city, countryCode } = useParams()\r\n\r\n    useEffect(() => {\r\n    \r\n        const getForecast = async () => {\r\n            \r\n\r\n            const url = getForecastUrl(city, countryCode)\r\n\r\n            try {\r\n    \r\n                const { data } = await axios.get(url)\r\n\r\n                const { dataAux, forecastItemListAux} =  getCharData(data)\r\n                \r\n                setChartData(dataAux)    \r\n\r\n               \r\n                setForecastItemList(forecastItemListAux)\r\n\r\n            } catch (error) {\r\n\r\n                console.log(\"error\")\r\n            }\r\n            \r\n        }\r\n\r\n        getForecast()\r\n\r\n    }, [city, countryCode])\r\n    \r\n    return { chartData, forecastItemList, city }\r\n}\r\n\r\nexport default useCityPage"]},"metadata":{},"sourceType":"module"}