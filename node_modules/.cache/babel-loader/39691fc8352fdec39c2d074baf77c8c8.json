{"ast":null,"code":"import { getCityCode } from './../utils';\nimport { toCelsius } from './../utils';\n\nconst getAllWeather = (response, city, countryCode) => {\n  const {\n    data\n  } = response;\n  const temperature = Number(toCelsius(data.main.temp));\n  const state = data.weather[0].main.toLowerCase();\n  const humidity = data.main.humidity;\n  const wind = date.wind.speed;\n  const propName = getCityCode(city, countryCode);\n  const propValue = {\n    temperature,\n    state,\n    humidity,\n    wind\n  };\n  return {\n    [propName]: propValue\n  };\n};\n\nexport default getAllWeather;","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather-app/src/utils/transform/getAllWeather.jsx"],"names":["getCityCode","toCelsius","getAllWeather","response","city","countryCode","data","temperature","Number","main","temp","state","weather","toLowerCase","humidity","wind","date","speed","propName","propValue"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,SAAT,QAA2B,YAA3B;;AAEA,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBC,WAAjB,KAAiC;AAEnD,QAAM;AAAEC,IAAAA;AAAF,MAAWH,QAAjB;AACA,QAAMI,WAAW,GAAGC,MAAM,CAACP,SAAS,CAACK,IAAI,CAACG,IAAL,CAAUC,IAAX,CAAV,CAA1B;AACA,QAAMC,KAAK,GAAGL,IAAI,CAACM,OAAL,CAAa,CAAb,EAAgBH,IAAhB,CAAqBI,WAArB,EAAd;AACA,QAAMC,QAAQ,GAAGR,IAAI,CAACG,IAAL,CAAUK,QAA3B;AACA,QAAMC,IAAI,GAAIC,IAAI,CAACD,IAAL,CAAUE,KAAxB;AACA,QAAMC,QAAQ,GAAGlB,WAAW,CAACI,IAAD,EAAOC,WAAP,CAA5B;AACA,QAAMc,SAAS,GAAG;AAAEZ,IAAAA,WAAF;AAAgBI,IAAAA,KAAhB;AAAuBG,IAAAA,QAAvB;AAAiCC,IAAAA;AAAjC,GAAlB;AAEA,SAAQ;AAAC,KAACG,QAAD,GAAaC;AAAd,GAAR;AACH,CAXD;;AAaA,eAAejB,aAAf","sourcesContent":["import { getCityCode } from './../utils'\r\nimport { toCelsius } from  './../utils'\r\n\r\nconst getAllWeather = (response, city, countryCode) => {\r\n\r\n    const { data } = response\r\n    const temperature = Number(toCelsius(data.main.temp))\r\n    const state = data.weather[0].main.toLowerCase()\r\n    const humidity = data.main.humidity\r\n    const wind =  date.wind.speed\r\n    const propName = getCityCode(city, countryCode)\r\n    const propValue = { temperature , state, humidity, wind }\r\n\r\n    return ({[propName] : propValue})\r\n}\r\n\r\nexport default getAllWeather"]},"metadata":{},"sourceType":"module"}