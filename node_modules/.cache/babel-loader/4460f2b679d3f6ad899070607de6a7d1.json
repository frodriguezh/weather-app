{"ast":null,"code":"import moment from 'moment';\nimport { toCelsius } from './../utils';\n\nconst getChartData = data => {\n  const daysAhead = [0, 1, 2, 3, 4, 5];\n  const days = daysAhead.map(d => moment().add(d, 'd'));\n  const dataAux = days.map(day => {\n    const tempObjArray = data.list.filter(item => {\n      const dayOfYear = moment.unix(item.dt).dayOfYear();\n      return dayOfYear === day.dayOfYear();\n    });\n    const temps = tempObjArray.map(item => item.main.temp);\n    return {\n      \"dayHour\": day.format('ddd'),\n      \"min\": toCelsius(Math.min(...temps)),\n      \"max\": toCelsius(Math.max(...temps)),\n      hasTemps: temps.length > 0 ? true : false\n    };\n  }).filter(item => item.hasTemps);\n  return {\n    dataAux\n  };\n};\n\nexport default getChartData;","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather-app/src/utils/transform/getChartData.jsx"],"names":["moment","toCelsius","getChartData","data","daysAhead","days","map","d","add","dataAux","day","tempObjArray","list","filter","item","dayOfYear","unix","dt","temps","main","temp","format","Math","min","max","hasTemps","length"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAE3B,QAAMC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAlB;AAEA,QAAMC,IAAI,GAAGD,SAAS,CAACE,GAAV,CAAeC,CAAC,IAAIP,MAAM,GAAGQ,GAAT,CAAaD,CAAb,EAAgB,GAAhB,CAApB,CAAb;AAEA,QAAME,OAAO,GAAGJ,IAAI,CAACC,GAAL,CAASI,GAAG,IAAI;AAE5B,UAAMC,YAAY,GAAIR,IAAI,CAACS,IAAL,CAAUC,MAAV,CAAiBC,IAAI,IAAI;AAE3C,YAAMC,SAAS,GAAGf,MAAM,CAACgB,IAAP,CAAYF,IAAI,CAACG,EAAjB,EAAqBF,SAArB,EAAlB;AACA,aAAOA,SAAS,KAAKL,GAAG,CAACK,SAAJ,EAArB;AACH,KAJqB,CAAtB;AAMA,UAAMG,KAAK,GAAGP,YAAY,CAACL,GAAb,CAAiBQ,IAAI,IAAIA,IAAI,CAACK,IAAL,CAAUC,IAAnC,CAAd;AAEA,WAAQ;AAEJ,iBAAWV,GAAG,CAACW,MAAJ,CAAW,KAAX,CAFP;AAGJ,aAAOpB,SAAS,CAACqB,IAAI,CAACC,GAAL,CAAS,GAAGL,KAAZ,CAAD,CAHZ;AAIJ,aAAOjB,SAAS,CAACqB,IAAI,CAACE,GAAL,CAAS,GAAGN,KAAZ,CAAD,CAJZ;AAKJO,MAAAA,QAAQ,EAAGP,KAAK,CAACQ,MAAN,GAAe,CAAf,GAAmB,IAAnB,GAA0B;AALjC,KAAR;AAOH,GAjBe,EAiBbb,MAjBa,CAiBNC,IAAI,IAAIA,IAAI,CAACW,QAjBP,CAAhB;AAmBA,SAAO;AAAEhB,IAAAA;AAAF,GAAP;AACH,CA1BD;;AA4BA,eAAeP,YAAf","sourcesContent":["import moment from 'moment'\r\nimport { toCelsius } from './../utils'\r\n\r\nconst getChartData = (data) => {\r\n\r\n    const daysAhead = [0, 1, 2, 3, 4, 5]\r\n\r\n    const days = daysAhead.map( d => moment().add(d, 'd'))\r\n\r\n    const dataAux = days.map(day => {\r\n\r\n        const tempObjArray =  data.list.filter(item => {\r\n\r\n            const dayOfYear = moment.unix(item.dt).dayOfYear()\r\n            return dayOfYear === day.dayOfYear()\r\n        })\r\n\r\n        const temps = tempObjArray.map(item => item.main.temp)\r\n\r\n        return ({\r\n\r\n            \"dayHour\": day.format('ddd'),\r\n            \"min\": toCelsius(Math.min(...temps)),\r\n            \"max\": toCelsius(Math.max(...temps)),\r\n            hasTemps: (temps.length > 0 ? true : false)\r\n        })\r\n    }).filter(item => item.hasTemps)\r\n\r\n    return { dataAux }\r\n}\r\n\r\nexport default getChartData"]},"metadata":{},"sourceType":"module"}