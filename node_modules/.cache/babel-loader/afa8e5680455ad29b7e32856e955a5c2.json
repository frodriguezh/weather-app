{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frodriguez\\\\Documents\\\\react\\\\weather-app\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useCallback } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport WelcomePage from './pages/WelcomePage';\nimport MainPage from './pages/MainPage';\nimport CityPage from './pages/CityPage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport { WeatherStateContext, WeatherDispatchContext } from './WeatherContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  allWeather: {},\n  allChartData: {},\n  allForecastItemList: {}\n};\n\nconst App = () => {\n  _s();\n\n  const reducer = useCallback((state, action) => {\n    switch (action.type) {\n      case \"SET_ALL_WEATHER\":\n        const weatherCity = action.payload;\n        const newAllWeather = { ...state.allWeather,\n          ...weatherCity\n        };\n        return { ...state,\n          allWeather: newAllWeather\n        };\n\n      case \"SET_CHART_DATA\":\n        const chartDataCity = action.payload;\n        const newAllChartData = { ...state.allChartData,\n          ...chartDataCity\n        };\n        return { ...state,\n          allChartData: newAllChartData\n        };\n\n      case \"SET_FORECAST_ITEM_LIST\":\n        const forecastItemListCity = action.payload;\n        const newAllForecastItemListCity = { ...state.allForecastItemList,\n          ...forecastItemListCity\n        };\n        return { ...state,\n          allForecastItemList: newAllForecastItemListCity\n        };\n\n      default:\n        return state;\n    }\n  }, []);\n  const [state, dispatch] = useReducer(reducer, initialValue);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(WelcomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        children: /*#__PURE__*/_jsxDEV(MainPage, {\n          data: state,\n          actions: dispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/city/:countryCode/:city\",\n        children: /*#__PURE__*/_jsxDEV(CityPage, {\n          data: state,\n          actions: dispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        children: /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"FWW/UpXof+U44HGHGYl3/dQIWPE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather-app/src/App.jsx"],"names":["React","useReducer","useCallback","BrowserRouter","Router","Switch","Route","WelcomePage","MainPage","CityPage","NotFoundPage","WeatherStateContext","WeatherDispatchContext","initialValue","allWeather","allChartData","allForecastItemList","App","reducer","state","action","type","weatherCity","payload","newAllWeather","chartDataCity","newAllChartData","forecastItemListCity","newAllForecastItemListCity","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,WAA5B,QAA8C,OAA9C;AACA,SAASC,aAAa,IAAIC,MAA1B,EACSC,MADT,EAESC,KAFT,QAEsB,kBAFtB;AAGA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,mBAAT,EAA8BC,sBAA9B,QAA2D,kBAA3D;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,YAAY,EAAE,EAFG;AAGjBC,EAAAA,mBAAmB,EAAE;AAHJ,CAArB;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAMC,OAAO,GAAGhB,WAAW,CAAC,CAACiB,KAAD,EAAQC,MAAR,KAAmB;AAE3C,YAAQA,MAAM,CAACC,IAAf;AAEI,WAAK,iBAAL;AACI,cAAMC,WAAW,GAAGF,MAAM,CAACG,OAA3B;AACA,cAAMC,aAAa,GAAG,EAAE,GAAGL,KAAK,CAACL,UAAX;AAAuB,aAAGQ;AAA1B,SAAtB;AACA,eAAO,EAAE,GAAGH,KAAL;AAAYL,UAAAA,UAAU,EAAEU;AAAxB,SAAP;;AAEJ,WAAK,gBAAL;AACI,cAAMC,aAAa,GAAGL,MAAM,CAACG,OAA7B;AACA,cAAMG,eAAe,GAAG,EAAE,GAAGP,KAAK,CAACJ,YAAX;AAAyB,aAAGU;AAA5B,SAAxB;AACA,eAAO,EAAE,GAAGN,KAAL;AAAYJ,UAAAA,YAAY,EAAEW;AAA1B,SAAP;;AAEJ,WAAK,wBAAL;AACI,cAAMC,oBAAoB,GAAGP,MAAM,CAACG,OAApC;AACA,cAAMK,0BAA0B,GAAE,EAAE,GAAGT,KAAK,CAACH,mBAAX;AAAgC,aAAGW;AAAnC,SAAlC;AACA,eAAO,EAAE,GAAGR,KAAL;AAAYH,UAAAA,mBAAmB,EAAEY;AAAjC,SAAP;;AAEJ;AACI,eAAOT,KAAP;AAlBR;AAqBH,GAvB0B,EAuBzB,EAvByB,CAA3B;AAyBA,QAAM,CAACA,KAAD,EAAQU,QAAR,IAAoB5B,UAAU,CAACiB,OAAD,EAAUL,YAAV,CAApC;AAEA,sBAEI,QAAC,MAAD;AAAA,2BACI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA,+BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEM,KAAhB;AAAuB,UAAA,OAAO,EAAEU;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,0BAAZ;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEV,KAAhB;AAAuB,UAAA,OAAO,EAAEU;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI,QAAC,KAAD;AAAA,+BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAoBH,CAjDD;;GAAMZ,G;;KAAAA,G;AAmDN,eAAeA,GAAf","sourcesContent":["import React, { useReducer, useCallback} from 'react'\r\nimport { BrowserRouter as Router,\r\n         Switch,\r\n         Route } from 'react-router-dom'\r\nimport WelcomePage from './pages/WelcomePage'\r\nimport MainPage from './pages/MainPage'\r\nimport CityPage from './pages/CityPage'\r\nimport NotFoundPage from './pages/NotFoundPage'\r\nimport { WeatherStateContext, WeatherDispatchContext} from './WeatherContext'\r\n\r\nconst initialValue = {\r\n    allWeather: {},\r\n    allChartData: {},\r\n    allForecastItemList: {}\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const reducer = useCallback((state, action) => {\r\n\r\n        switch (action.type) {\r\n\r\n            case \"SET_ALL_WEATHER\":\r\n                const weatherCity = action.payload\r\n                const newAllWeather = { ...state.allWeather, ...weatherCity }\r\n                return { ...state, allWeather: newAllWeather}\r\n                \r\n            case \"SET_CHART_DATA\":\r\n                const chartDataCity = action.payload\r\n                const newAllChartData = { ...state.allChartData, ...chartDataCity}\r\n                return { ...state, allChartData: newAllChartData}\r\n\r\n            case \"SET_FORECAST_ITEM_LIST\":\r\n                const forecastItemListCity = action.payload\r\n                const newAllForecastItemListCity= { ...state.allForecastItemList, ...forecastItemListCity}\r\n                return { ...state, allForecastItemList: newAllForecastItemListCity}\r\n            \r\n            default:\r\n                return state\r\n        }\r\n\r\n    },[])\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialValue)\r\n\r\n    return (\r\n        \r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <WelcomePage />\r\n                </Route>\r\n                <Route path=\"/main\">\r\n                    <MainPage data={state} actions={dispatch} />\r\n                </Route>\r\n                <Route path=\"/city/:countryCode/:city\">\r\n                    <CityPage data={state} actions={dispatch} />\r\n                </Route>\r\n                <Route>\r\n                    <NotFoundPage />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n          \r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}