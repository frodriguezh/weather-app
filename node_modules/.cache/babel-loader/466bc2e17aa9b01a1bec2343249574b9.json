{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frodriguez\\\\Documents\\\\react\\\\weather-app\\\\src\\\\WeatherContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherStateContext = /*#__PURE__*/React.createContext();\nconst WeatherDispatchContext = /*#__PURE__*/React.createContext();\nconst initialValue = {\n  allWeather: {},\n  allChartData: {},\n  allForecastItemList: {}\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_ALL_WEATHER\":\n      const weatherCity = action.payload;\n      const newAllWeather = { ...state.allWeather,\n        ...weatherCity\n      };\n      return { ...state,\n        allWeather: newAllWeather\n      };\n\n    case \"SET_CHART_DATA\":\n      const chartDataCity = action.payload;\n      const newAllChartData = { ...state.allChartData,\n        ...chartDataCity\n      };\n      return { ...state,\n        allChartData: newAllChartData\n      };\n\n    case \"SET_FORECAST_ITEM_LIST\":\n      const forecastItemListCity = action.payload;\n      const newAllForecastItemListCity = { ...state.allForecastItemList,\n        ...forecastItemListCity\n      };\n      return { ...state,\n        allForecastItemList: newAllForecastItemListCity\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst WeatherContext = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialValue);\n  return /*#__PURE__*/_jsxDEV(WeatherDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(WeatherStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherContext, \"4lkJSiYZPtg3yU6cDCuaqNx534E=\");\n\n_c = WeatherContext;\nexport { WeatherContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherContext\");","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather-app/src/WeatherContext.jsx"],"names":["React","useReducer","useCallback","WeatherStateContext","createContext","WeatherDispatchContext","initialValue","allWeather","allChartData","allForecastItemList","reducer","state","action","type","weatherCity","payload","newAllWeather","chartDataCity","newAllChartData","forecastItemListCity","newAllForecastItemListCity","WeatherContext","children","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,WAA5B,QAA8C,OAA9C;;AAEA,MAAMC,mBAAmB,gBAAGH,KAAK,CAACI,aAAN,EAA5B;AACA,MAAMC,sBAAsB,gBAAGL,KAAK,CAACI,aAAN,EAA/B;AAEA,MAAME,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,YAAY,EAAE,EAFG;AAGjBC,EAAAA,mBAAmB,EAAE;AAHJ,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE/B,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,iBAAL;AACI,YAAMC,WAAW,GAAGF,MAAM,CAACG,OAA3B;AACA,YAAMC,aAAa,GAAG,EAAE,GAAGL,KAAK,CAACJ,UAAX;AAAuB,WAAGO;AAA1B,OAAtB;AACA,aAAO,EAAE,GAAGH,KAAL;AAAYJ,QAAAA,UAAU,EAAES;AAAxB,OAAP;;AAEJ,SAAK,gBAAL;AACI,YAAMC,aAAa,GAAGL,MAAM,CAACG,OAA7B;AACA,YAAMG,eAAe,GAAG,EAAE,GAAGP,KAAK,CAACH,YAAX;AAAyB,WAAGS;AAA5B,OAAxB;AACA,aAAO,EAAE,GAAGN,KAAL;AAAYH,QAAAA,YAAY,EAAEU;AAA1B,OAAP;;AAEJ,SAAK,wBAAL;AACI,YAAMC,oBAAoB,GAAGP,MAAM,CAACG,OAApC;AACA,YAAMK,0BAA0B,GAAE,EAAE,GAAGT,KAAK,CAACF,mBAAX;AAAgC,WAAGU;AAAnC,OAAlC;AACA,aAAO,EAAE,GAAGR,KAAL;AAAYF,QAAAA,mBAAmB,EAAEW;AAAjC,OAAP;;AAEJ;AACI,aAAOT,KAAP;AAlBR;AAqBH,CAvBD;;AA0BA,MAAMU,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAEnC,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBtB,UAAU,CAACS,OAAD,EAAUJ,YAAV,CAApC;AACA,sBACI,QAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEiB,QAAxC;AAAA,2BACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAEZ,KAArC;AAAA,gBACMW;AADN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAVD;;GAAMD,c;;KAAAA,c;AAYN,SACIA,cADJ","sourcesContent":["import React, { useReducer, useCallback} from 'react'\r\n\r\nconst WeatherStateContext = React.createContext()\r\nconst WeatherDispatchContext = React.createContext()\r\n\r\nconst initialValue = {\r\n    allWeather: {},\r\n    allChartData: {},\r\n    allForecastItemList: {}\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case \"SET_ALL_WEATHER\":\r\n            const weatherCity = action.payload\r\n            const newAllWeather = { ...state.allWeather, ...weatherCity }\r\n            return { ...state, allWeather: newAllWeather}\r\n            \r\n        case \"SET_CHART_DATA\":\r\n            const chartDataCity = action.payload\r\n            const newAllChartData = { ...state.allChartData, ...chartDataCity}\r\n            return { ...state, allChartData: newAllChartData}\r\n\r\n        case \"SET_FORECAST_ITEM_LIST\":\r\n            const forecastItemListCity = action.payload\r\n            const newAllForecastItemListCity= { ...state.allForecastItemList, ...forecastItemListCity}\r\n            return { ...state, allForecastItemList: newAllForecastItemListCity}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nconst WeatherContext = ({children}) => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialValue)\r\n    return(\r\n        <WeatherDispatchContext.Provider value={dispatch}>\r\n            <WeatherStateContext.Provider value={state} >\r\n                { children }\r\n            </WeatherStateContext.Provider>\r\n        </WeatherDispatchContext.Provider>\r\n    )\r\n}\r\n\r\nexport {\r\n    WeatherContext\r\n}"]},"metadata":{},"sourceType":"module"}