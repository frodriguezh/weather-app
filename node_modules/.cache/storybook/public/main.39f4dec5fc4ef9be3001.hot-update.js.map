{"version":3,"file":"main.39f4dec5fc4ef9be3001.hot-update.js","sources":["webpack:///./src/hooks/useCityList.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport convertUnits from 'convert-units'\r\n\r\nconst getCityCode = ( city, countryCode) => `${city}-${countryCode}`\r\n\r\nconst useCityList = (cities) => {\r\n\r\n    const [allWeather, setAllWeather] = useState({})\r\n    const [error, setError] = useState()\r\n\r\n    useEffect(() => {\r\n\r\n        const setWeather = async (city, countryCode) => {\r\n\r\n            const appid = \"811bed139763af7e4f3428e936ed75fb\"\r\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${city},${countryCode}&appid=${appid}`\r\n\r\n            try {\r\n\r\n                const response = await axios.get(url)\r\n                const { data } = response\r\n                const temperature = Number(convertUnits(data.main.temp).from(\"K\").to(\"C\").toFixed(0))\r\n                const state = data.weather[0].main.toLowerCase()\r\n                const propName = getCityCode(city, countryCode)\r\n                const propValue = { temperature , state }\r\n\r\n                setAllWeather(allWeather => {\r\n                    const result = { ...allWeather, [propName] : propValue }\r\n                    return result\r\n\r\n                })\r\n                    \r\n            } catch (error) {\r\n\r\n                if(error.response){\r\n\r\n                    setError(\"Hay un error con el servidor\")\r\n    \r\n                }else if(error.request){\r\n    \r\n                    setError(\"Sin internet\")\r\n    \r\n                }else{\r\n    \r\n                    setError(\"Ponte a rezar\")\r\n                }\r\n    \r\n                \r\n            }   \r\n            \r\n        }\r\n\r\n        cities.forEach(({ city, countryCode }) => {\r\n\r\n            setWeather(city, countryCode)\r\n                \r\n        });\r\n        \r\n        \r\n        \r\n    }, [cities])\r\n\r\n    return { allWeather, error, setError }\r\n}\r\n\r\nexport default useCityList"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA3DA;AACA;AA2DA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}