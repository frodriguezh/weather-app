{"version":3,"file":"main.3bb2eb757c99a4c86457.hot-update.js","sources":["webpack:///./src/components/CityInfo/CityInfo.jsx","webpack:///./src/components/CityList/CityList.jsx","webpack:///./src/components/Forecast/Forecast.jsx","webpack:///./src/components/ForecastChart/ForecastChart.jsx","webpack:///./src/components/ForecastItem/ForecastItem.jsx","webpack:///./src/components/IconState/IconState.jsx","webpack:///./src/components/Weather/Weather.jsx","webpack:///./src/components/WheaterDetails/WeaterDetails.jsx"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst CityInfo = ({city, country}) => {\r\n    return (\r\n        <>\r\n            <Typography display=\"inline\" variant=\"h4\">{city}, </Typography>\r\n            <Typography display=\"inline\" variant=\"h6\">{country}</Typography>\r\n        </>\r\n    )\r\n}\r\n\r\nCityInfo.propTypes = {\r\n    city: PropTypes.string.isRequired,\r\n    country: PropTypes.string.isRequired\r\n}\r\n\r\nexport default CityInfo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport CityInfo from './../CityInfo'\r\nimport Weather from './../Weather'\r\n\r\n//funcion que retorna otra funcion\r\nconst renderCityAndCountry = eventOnClickCity => cityAndCountry => {\r\n\r\n    const { city, country } = cityAndCountry\r\n\r\n    return (\r\n    \r\n        <li key={city} onClick={eventOnClickCity}>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n\r\n                <Grid item md={8} xs={12}>\r\n                    <CityInfo city={city} country={country} />\r\n                </Grid>\r\n                \r\n                <Grid item md={4} xs={12}>\r\n                    <Weather temperature = {10} state=\"sunny\" />\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </li>\r\n        \r\n    )\r\n\r\n}\r\n\r\n\r\nconst CityList = ({ cities, onClickCity }) => {\r\n    return (\r\n        <ul>\r\n            { \r\n                cities.map(cityAndCountry => renderCityAndCountry(onClickCity)(cityAndCountry))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nCityList.propTypes = {\r\n\r\n    cities: PropTypes.array.isRequired,\r\n    onClickCity: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default CityList\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport ForecastItem from './../ForecastItem'\r\nimport { validValues } from './../IconState' \r\n\r\nconst renderForcastItem = forecast => {\r\n\r\n    const { weekDay, hour, state, temperature } = forecast\r\n  \r\n    return (\r\n        //Para listas se debe incorporar una key unica\r\n        <Grid item \r\n            data-testid=\"forecast-item-container\" \r\n            key={`${weekDay}${hour}`}>\r\n\r\n            <ForecastItem  hour={hour} \r\n                weekDay={weekDay} \r\n                state={state} \r\n                temperature={temperature} \r\n\r\n            />\r\n\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nconst Forecast = ({ forecastItemList }) => {\r\n    return (\r\n        <>\r\n            <Grid container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\">\r\n                {\r\n                    forecastItemList.map(forecast => renderForcastItem(forecast))\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nForecast.propTypes = {\r\n\r\n    forecastItemList: PropTypes.arrayOf(PropTypes.shape({\r\n        weekDay: PropTypes.string.isRequired,\r\n        hour: PropTypes.number.isRequired,\r\n        state: PropTypes.oneOf(validValues).isRequired,\r\n        temperature: PropTypes.number.isRequired,        \r\n    })).isRequired,\r\n\r\n}\r\n\r\nexport default Forecast\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { LineChart } from 'recharts'\r\n\r\nconst ForecastChart = ({ data }) => {\r\n    return (\r\n        <div>\r\n            <LineChart\r\n                height={250}\r\n                width={750}\r\n                margin={{ top: 20, bottom: 20, left: 5, right: 5 }}>\r\n                \r\n            </LineChart>  \r\n        </div>\r\n    )\r\n}\r\n\r\nForecastChart.propTypes = {\r\n\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n\r\n            dayHour: PropTypes.string.isRequired,\r\n            min: PropTypes.number.isRequired,\r\n            max: PropTypes.number.isRequired,\r\n        }),\r\n    ).isRequired,\r\n\r\n}\r\n\r\nexport default ForecastChart\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Grid  from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { IconContext } from 'react-icons' \r\nimport IconState, { validValues } from './../IconState' \r\n\r\n\r\nconst ForecastItem = ({weekDay, hour, state, temperature}) => {\r\n    return (\r\n        <div>\r\n            <Grid container \r\n                direction=\"column\"\r\n                justifyContent= \"center\"\r\n                alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography>{weekDay}</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography>{hour}</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography>\r\n                        <IconContext.Provider value={{ size:'5em' }}>\r\n                        <IconState state={state} /> \r\n                        </IconContext.Provider>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography>{temperature}Â°</Typography>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nForecastItem.propTypes = {\r\n\r\n    weekDay: PropTypes.string.isRequired,\r\n    hour: PropTypes.number.isRequired,\r\n    state: PropTypes.oneOf(validValues).isRequired,\r\n    temperature: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default ForecastItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { WiCloud,\r\n    WiDayCloudy,\r\n    WiDaySunny,\r\n    WiRain,\r\n    WiDayFog} from 'react-icons/wi'\r\n\r\nexport const validValues = [\"cloud\", \"cloudy\", \"fog\", \"sunny\",\"rain\"]\r\n\r\nconst stateByName = {\r\n\r\n    cloud: WiCloud,\r\n    cloudy: WiDayCloudy,\r\n    fog: WiDayFog, \r\n    sunny: WiDaySunny,\r\n    rain: WiRain,\r\n\r\n}\r\n\r\n\r\nconst IconState = ({ state }) => {\r\n    const StateByName = stateByName[state]\r\n    return (<StateByName />)\r\n}\r\n\r\nIconState.propTypes = {\r\n\r\n    state: PropTypes.oneOf(validValues).isRequired,\r\n\r\n}\r\n\r\nexport default IconState\r\n ","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { IconContext } from 'react-icons' \r\nimport IconState, { validValues } from './../IconState' \r\n\r\n\r\nconst Weather = ({ temperature, state }) => {\r\n    return (\r\n        <div>\r\n            <IconContext.Provider value={{ size:'5em' }}>\r\n                <IconState state={state} /> \r\n            </IconContext.Provider>\r\n            <Typography display=\"inline\" variant=\"h2\">{temperature}</Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nWeather.propTypes = {\r\n\r\n    temperature : PropTypes.number.isRequired,\r\n    state: PropTypes.oneOf(validValues).isRequired,\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Typography  from '@material-ui/core/Typography'\r\n\r\nconst WeaterDetails = ({ humidity , wind }) => {\r\n    return (\r\n        <>\r\n            <Typography>Humedad: {humidity}%</Typography>\r\n            <Typography>Viento: {wind} km/h</Typography>\r\n        </>\r\n    )\r\n}\r\n\r\nWeaterDetails.propTypes = {\r\n\r\n    humidity: PropTypes.number.isRequired,\r\n    wind: PropTypes.number.isRequired,\r\n\r\n}\r\n\r\nexport default WeaterDetails\r\n"],"mappings":"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","sourceRoot":""}